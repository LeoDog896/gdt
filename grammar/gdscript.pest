// https://docs.godotengine.org/en/latest/contributing/development/file_formats/gdscript_grammar.html
program = {
	SOI
    ~ statement* ~
    EOI
}

// all chars allowed by gdscript in an identifier
ident_char = { ASCII_ALPHANUMERIC | "_" }
identifier = @{ ident_char+ }

char = { ASCII_ALPHANUMERIC | ":" | "/" | "." }
chars = @{ char* }

digit = { ASCII_DIGIT }
number = @{ digit+ }

string = ${ "\"" ~ chars ~ "\"" }

array = { 
	"[" ~ "]" |
    "[" ~ expression ~ ("," ~ expression)* ~ "]"
}

pair = { (string | identifier | number) ~ ("=" | ":") ~ expression }

object = {
    "{" ~ "}" |
    "{" ~ pair ~ ("," ~ pair)* ~ "}"
}

expression = { identifier | number | string | array | object }

inheritance = ${ "extends " ~ identifier }
class_name = ${ "class_name " ~ identifier }

annotation = @{ "@" ~ identifier ~ "(" ~ string ~ ")" }

statement = { annotation* ~ (variableDeclaration | constDeclaration | inheritance | class_name) }

onready = { "onready " }
export = { "export " }

variableType = { ":" ~ identifier }
inferred = @{ ":=" }
variableDeclaration = { 
	onready?
    ~ export?
    ~ "var "
    ~ identifier
    ~ (
    	(variableType ~ ("=" ~ expression)?)
        | (variableType? ~ ("=" ~ expression))
        | (inferred ~ expression)
    )?
}

// const's don't have walrus operators
constDeclaration = {
	export?
    ~ "const "
    ~ identifier
    ~ variableType?
    ~ "="
    ~ expression
}

WHITESPACE = _{ " " | "\t" | "\n" }
COMMENT = { "#" ~ (!"\n" ~ ANY)* }